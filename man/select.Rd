% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select.R
\name{select}
\alias{select}
\title{Select columns of a tibble}
\usage{

}
\description{
Select columns of a tibble by name, and rename
or rearrange if needed.
}
\details{
The first argument \code{\link[=select]{select()}} takes is a tibble.
After that, you'll name the variables that you
want to keep, or use '-' to name variables that
you want to drop.

\code{data \%>\% select(...)}

\code{select(data, ...)}
}
\examples{
# Select and rearrange 2 variables:

tibble(
  x = c(1, 2, 3),
  y = c(4, 5, 6),
  z = c(7, 8, 9)
) \%>\%
  select(z, x)

#> # A tibble: 3 x 2
#>       z     x
     <dbl> <dbl>
#>       7     1
#>       8     2
#>       9     3

-----------------------------------

# Drop a variable using '-':

tibble(
  x = c(1, 2, 3),
  y = c(4, 5, 6),
  z = c(7, 8, 9)
) \%>\%
  select(-z)

#> # A tibble: 3 x 2
#>     x     y
   <dbl> <dbl>
#>     1     4
#>     2     5
#>     3     6

-----------------------------------

# Rename a variable:

tibble(
  x = c(1, 2, 3),
  y = c(4, 5, 6),
  z = c(7, 8, 9)
) \%>\%
  select(low_numbers = x, y)

#> # A tibble: 3 x 2
#>   low_numbers     y
           <dbl> <dbl>
#>             1     4
#>             2     5
#>             3     6

-----------------------------------

library(gapminder)

gapminder \%>\%
  select(country, year, gdpPercap)

#> # A tibble: 1,704 x 3
#>    country      year gdpPercap
      <fct>       <int>     <dbl>
#>  1 Afghanistan  1952      779.
#>  2 Afghanistan  1957      821.
#>  3 Afghanistan  1962      853.

}
\seealso{
Other dplyr verbs: \code{\link[=filter]{filter()}}, \code{\link[=group_by]{group_by()}}, \code{\link[=summarize]{summarize()}}, \code{\link[=mutate]{mutate()}}, \code{\link[=arrange]{arrange()}}
}
